{"version":3,"file":"static/js/745.84e1a055.chunk.js","mappings":"sNACA,EAAuB,mBAAvB,EAAsD,wBAAtD,EAAsF,oBAAtF,EAAkH,oBAAlH,EAA6I,mBAA7I,EAAyK,qBAAzK,EAAsM,oBAAtM,EAAkO,oB,6BCqDlO,EA3Ca,WACT,IAAMA,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAoBnB,OACIC,EAAAA,EAAAA,KAAA,QAAMC,SAnBgB,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAAOC,SAASF,KAAKG,MAC9BC,EAASN,EAAEG,OAAOC,SAASG,MAAMF,MAC1BZ,EAAMe,MAAK,SAAAC,GAAO,OAAOA,EAAXP,KAAuBQ,gBAAkBR,EAAKQ,aAAa,IAEjFC,EAAAA,OAAAA,QACD,QACA,4CACA,SAGAC,EAAAA,OAAAA,QAAe,4BACfhB,GAASiB,EAAAA,EAAAA,IAAiB,CAAEX,KAAAA,EAAMI,OAAAA,KAClCN,EAAEG,OAAOW,QAEjB,EAGmCC,UAAWC,EAASC,UACjDC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAcC,SAAA,EAC1BnB,EAAAA,EAAAA,KAAA,KAAGiB,UAAWC,EAAUC,SAAC,qBACzBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAUC,SAAA,EACpBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAASC,SAAA,EACrBnB,EAAAA,EAAAA,KAAA,SAAOiB,UAAWC,EAAWG,GAAG,OAAOC,KAAK,OAAOlB,KAAK,OAAOmB,UAAQ,EAACC,aAAa,UACrFxB,EAAAA,EAAAA,KAAA,SAAOiB,UAAWC,EAAWO,QAAQ,OAAMN,SAAC,aAEhDC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAASC,SAAA,EACrBnB,EAAAA,EAAAA,KAAA,SAAOiB,UAAWC,EAAWG,GAAG,MAAMC,KAAK,MAAMlB,KAAK,QAAQmB,UAAQ,EAACC,aAAa,UACpFxB,EAAAA,EAAAA,KAAA,SAAOiB,UAAWC,EAAWO,QAAQ,MAAKN,SAAC,kBAGrDnB,EAAAA,EAAAA,KAAA,UAAQiB,UAAWC,EAAYI,KAAK,SAAQH,SAAC,oBAK3D,C,8FClDatB,EAAmB,SAAC6B,GAAK,OAAKA,EAAMC,SAASA,SAAShC,KAAM,EAI5DiC,GAAWC,EAAAA,EAAAA,KAFM,SAACH,GAAK,OAAKA,EAAMI,OAAOA,MAAO,GAEPjC,GAAkB,SAACiC,EAAQnC,GAAK,OAAIA,EAAMmC,QAAO,SAAAnB,GAAO,OAAAA,EAAJP,KAAgBQ,cAAcmB,SAASD,EAAOlB,cAAc,GAAC,G","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","store/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"container\":\"Form_container__WXj-7\",\"event\":\"Form_event__-AKl8\",\"items\":\"Form_items__+YNdL\",\"item\":\"Form_item__zhObj\",\"button\":\"Form_button__8NOIT\",\"input\":\"Form_input__FTtTw\",\"label\":\"Form_label__8nx+5\"};","import {  useDispatch, useSelector } from \"react-redux\";\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport css from \"./Form.module.css\"\n\nimport {selectorContacts} from \"store/contacts/selectors\";\nimport { addContactsThunk } from \"store/contacts/thunks\";\n\n\n\nconst Form = () => {\n    const items = useSelector(selectorContacts);\n    const dispatch = useDispatch();\n\n    const handlerOnSubmit = (e) => {\n        e.preventDefault();\n        const name = e.target.elements.name.value;\n        const number = e.target.elements.phone.value;\n        const twin = items.find(({ name : user }) => user.toLowerCase() === name.toLowerCase());\n        if (twin) {\n             Report.failure(\n            'error',\n            'There is already a contact with this name',\n            'Okay',\n            );\n        } else {\n            Notify.success('A new contact is created');\n            dispatch(addContactsThunk({ name, number }))\n            e.target.reset()\n        }\n    }\n\n  return (\n      <form onSubmit={handlerOnSubmit} className={css.form}>\n          <div className={css.container}>\n              <p className={css.event}>Add new contact</p>\n              <div className={css.items}>\n                    <div className={css.item}>\n                        <input className={css.input} id=\"name\" type=\"text\" name=\"name\" required autoComplete=\"true\"/>\n                        <label className={css.label} htmlFor=\"name\">Name</label>\n                    </div>\n                    <div className={css.item}>\n                        <input className={css.input} id=\"tel\" type=\"tel\" name=\"phone\" required autoComplete=\"true\"/>\n                        <label className={css.label} htmlFor=\"tel\">Number</label>\n              </div>\n              </div>\n              <button className={css.button} type='submit'>Add contact</button>\n                </div>\n            </form>\n            \n        );\n}\n\nexport default Form","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectorContacts = (state) => state.contacts.contacts.items;\n\nexport const selectorFilter = (state) => state.filter.filter;\n\nexport const selector = createSelector(selectorFilter,selectorContacts, (filter, items)=> items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())))"],"names":["items","useSelector","selectorContacts","dispatch","useDispatch","_jsx","onSubmit","e","preventDefault","name","target","elements","value","number","phone","find","_ref","toLowerCase","Report","Notify","addContactsThunk","reset","className","css","children","_jsxs","id","type","required","autoComplete","htmlFor","state","contacts","selector","createSelector","filter","includes"],"sourceRoot":""}