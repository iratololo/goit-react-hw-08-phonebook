{"version":3,"file":"static/js/666.2b58f87d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactListEl/ContactListEl.module.css?935d","components/ContactListEl/ContactListEl.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Scrollbar/Scrollbar.jsx","pages/Contacts/Contacts.jsx","store/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Contacts_page__RWD6J\",\"scrolltop\":\"Contacts_scrolltop__IcaVR\",\"column\":\"Contacts_column__rEFwn\",\"add\":\"Contacts_add__zWazM\",\"icon\":\"Contacts_icon__NU3jc\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListEl_item__KxWsk\",\"contact\":\"ContactListEl_contact__mgN8o\",\"avatar\":\"ContactListEl_avatar__ZlNch\",\"button\":\"ContactListEl_button__xiUbG\",\"name\":\"ContactListEl_name__0oUkd\"};","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport css from \"./ContactListEl.module.css\"\n\nimport { changeProfile } from \"store/contacts/sliceContacts\";\n\nexport const ContactListEl = ({ data }) => {\n        const { name, number } = data;\n        const dispatch = useDispatch();\n\n        const handlerOnClick = () => {\n        dispatch(changeProfile(data))\n        }\n\n  return (\n          <li className={css.item}>\n                <Link onClick={handlerOnClick} to='id'>\n                        <div className={css.contact}>\n                                <div className={css.avatar}>{name.slice(0, 1)}</div>\n                                <div className={css.description}>\n                                        <p className={css.name}>{name}</p>\n                                        <p className={css.number}>{number}</p>\n                                </div>\n                        </div>\n                </Link>\n        </li>\n        )\n}","import { useSelector } from \"react-redux\";\n\nimport css from \"./ContactList.module.css\"\nimport { ContactListEl } from \"../ContactListEl/ContactListEl\"\n\nimport { selector } from \"store/contacts/selectors\";\n\nexport const ContactList = () => {\n    const items = useSelector(selector);\n\n    return (\n            <ul className={css.list}>\n                {items.map((item) => {\n                    return <ContactListEl key={item.id} data={item}/>\n                })}\n            </ul>\n        );\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\n\nimport css from './Filter.module.css';\n\nimport { changeFilter } from 'store/filter/sliceFilter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n            <input onChange={({target:{value}}) => dispatch(changeFilter(value))} className={css.input} type=\"text\" name=\"filter\" placeholder='Find contacts by name'/>\n        )\n}","import { Scrollbars } from 'react-custom-scrollbars-2';\n\nexport const CustomScrollbar = ({ children }) => {\n    return (\n        <Scrollbars autoHeight\n        autoHeightMin={100}\n        autoHeightMax={500}>\n        {children}\n      </Scrollbars>\n    )\n}","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CiCirclePlus } from \"react-icons/ci\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nimport css from \"./Contacts.module.css\"\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport Container from \"components/reuse/Container/Container\";\nimport { CustomScrollbar } from \"components/Scrollbar/Scrollbar\";\n\nimport { selectorContacts } from \"store/contacts/selectors\";\nimport { getContactsThunk } from \"store/contacts/thunks\";\n\n\nconst Contacts = () => {\n    const items = useSelector(selectorContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n    dispatch(getContactsThunk());\n    }, [dispatch]);\n\n    return (\n        <Container>\n            <div className={css.page}>\n                <div className={css.column}>\n                    <div className={css.scrolltop}>\n                        <Filter />\n                        \n                        <Link className={css.add} to=\"form\"><CiCirclePlus className={css.icon} /></Link>\n                    </div>\n                    <CustomScrollbar>\n                    {items.length !== 0 && <ContactList/>}\n                    </CustomScrollbar>\n                </div>\n                <div className={css.column}>\n                    <Outlet/>\n                </div>\n            </div>\n       </Container>\n    )\n}\n\nexport default Contacts","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectorContacts = (state) => state.contacts.contacts.items;\n\nexport const selectorFilter = (state) => state.filter.filter;\n\nexport const selector = createSelector(selectorFilter,selectorContacts, (filter, items)=> items.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())))"],"names":["ContactListEl","_ref","data","name","number","dispatch","useDispatch","_jsx","className","css","children","Link","onClick","changeProfile","to","_jsxs","slice","ContactList","items","useSelector","selector","map","item","id","Filter","onChange","value","target","changeFilter","type","placeholder","CustomScrollbar","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","selectorContacts","useEffect","getContactsThunk","Container","CiCirclePlus","length","Outlet","state","contacts","createSelector","filter","toLowerCase","includes"],"sourceRoot":""}